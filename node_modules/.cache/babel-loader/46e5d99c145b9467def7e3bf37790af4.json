{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\n/* eslint-disable jsx-a11y/aria-role */\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport KeyboardArrowLeft from '../internal/svg-icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '../internal/svg-icons/KeyboardArrowRight';\nimport withStyles from '../styles/withStyles';\nimport ButtonBase from '../ButtonBase';\nexport var styles = {\n  root: {\n    width: 40,\n    flexShrink: 0\n  },\n  vertical: {\n    width: '100%',\n    height: 40,\n    '& svg': {\n      transform: 'rotate(90deg)'\n    }\n  }\n};\n/**\n * @ignore - internal component.\n */\n\nvar _ref = /*#__PURE__*/React.createElement(KeyboardArrowLeft, {\n  fontSize: \"small\"\n});\n\nvar _ref2 = /*#__PURE__*/React.createElement(KeyboardArrowRight, {\n  fontSize: \"small\"\n});\n\nvar TabScrollButton = React.forwardRef(function TabScrollButton(props, ref) {\n  var classes = props.classes,\n      classNameProp = props.className,\n      direction = props.direction,\n      orientation = props.orientation,\n      visible = props.visible,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"direction\", \"orientation\", \"visible\"]);\n\n  var className = clsx(classes.root, classNameProp, orientation === 'vertical' && classes.vertical);\n\n  if (!visible) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: className\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(ButtonBase, _extends({\n    component: \"div\",\n    className: className,\n    ref: ref,\n    role: null,\n    tabIndex: null\n  }, other), direction === 'left' ? _ref : _ref2);\n});\nprocess.env.NODE_ENV !== \"production\" ? TabScrollButton.propTypes = {\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * Which direction should the button indicate?\n   */\n  direction: PropTypes.oneOf(['left', 'right']).isRequired,\n\n  /**\n   * The tabs orientation (layout flow direction).\n   */\n  orientation: PropTypes.oneOf(['horizontal', 'vertical']).isRequired,\n\n  /**\n   * Should the button be present or just consume space.\n   */\n  visible: PropTypes.bool.isRequired\n} : void 0;\nexport default withStyles(styles, {\n  name: 'PrivateTabScrollButton'\n})(TabScrollButton);","map":{"version":3,"names":["_extends","_objectWithoutProperties","React","PropTypes","clsx","KeyboardArrowLeft","KeyboardArrowRight","withStyles","ButtonBase","styles","root","width","flexShrink","vertical","height","transform","_ref","createElement","fontSize","_ref2","TabScrollButton","forwardRef","props","ref","classes","classNameProp","className","direction","orientation","visible","other","component","role","tabIndex","process","env","NODE_ENV","propTypes","object","isRequired","string","oneOf","bool","name"],"sources":["C:/Users/WINDWOS  10 teste/Desktop/GUTHUB/Repositorios/DIO-Projeto-Reactjs/covid19/node_modules/@material-ui/core/esm/Tabs/TabScrollButton.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\n\n/* eslint-disable jsx-a11y/aria-role */\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport KeyboardArrowLeft from '../internal/svg-icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '../internal/svg-icons/KeyboardArrowRight';\nimport withStyles from '../styles/withStyles';\nimport ButtonBase from '../ButtonBase';\nexport var styles = {\n  root: {\n    width: 40,\n    flexShrink: 0\n  },\n  vertical: {\n    width: '100%',\n    height: 40,\n    '& svg': {\n      transform: 'rotate(90deg)'\n    }\n  }\n};\n/**\n * @ignore - internal component.\n */\n\nvar _ref = /*#__PURE__*/React.createElement(KeyboardArrowLeft, {\n  fontSize: \"small\"\n});\n\nvar _ref2 = /*#__PURE__*/React.createElement(KeyboardArrowRight, {\n  fontSize: \"small\"\n});\n\nvar TabScrollButton = React.forwardRef(function TabScrollButton(props, ref) {\n  var classes = props.classes,\n      classNameProp = props.className,\n      direction = props.direction,\n      orientation = props.orientation,\n      visible = props.visible,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"direction\", \"orientation\", \"visible\"]);\n\n  var className = clsx(classes.root, classNameProp, orientation === 'vertical' && classes.vertical);\n\n  if (!visible) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: className\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(ButtonBase, _extends({\n    component: \"div\",\n    className: className,\n    ref: ref,\n    role: null,\n    tabIndex: null\n  }, other), direction === 'left' ? _ref : _ref2);\n});\nprocess.env.NODE_ENV !== \"production\" ? TabScrollButton.propTypes = {\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * Which direction should the button indicate?\n   */\n  direction: PropTypes.oneOf(['left', 'right']).isRequired,\n\n  /**\n   * The tabs orientation (layout flow direction).\n   */\n  orientation: PropTypes.oneOf(['horizontal', 'vertical']).isRequired,\n\n  /**\n   * Should the button be present or just consume space.\n   */\n  visible: PropTypes.bool.isRequired\n} : void 0;\nexport default withStyles(styles, {\n  name: 'PrivateTabScrollButton'\n})(TabScrollButton);"],"mappings":"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"},"metadata":{},"sourceType":"module"}