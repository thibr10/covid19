{"ast":null,"code":"/* eslint-disable consistent-return, jsx-a11y/no-noninteractive-tabindex */\nimport * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport PropTypes from 'prop-types';\nimport ownerDocument from '../utils/ownerDocument';\nimport useForkRef from '../utils/useForkRef';\n/**\n * @ignore - internal component.\n */\n\nfunction TrapFocus(props) {\n  var children = props.children,\n      _props$disableAutoFoc = props.disableAutoFocus,\n      disableAutoFocus = _props$disableAutoFoc === void 0 ? false : _props$disableAutoFoc,\n      _props$disableEnforce = props.disableEnforceFocus,\n      disableEnforceFocus = _props$disableEnforce === void 0 ? false : _props$disableEnforce,\n      _props$disableRestore = props.disableRestoreFocus,\n      disableRestoreFocus = _props$disableRestore === void 0 ? false : _props$disableRestore,\n      getDoc = props.getDoc,\n      isEnabled = props.isEnabled,\n      open = props.open;\n  var ignoreNextEnforceFocus = React.useRef();\n  var sentinelStart = React.useRef(null);\n  var sentinelEnd = React.useRef(null);\n  var nodeToRestore = React.useRef();\n  var rootRef = React.useRef(null); // can be removed once we drop support for non ref forwarding class components\n\n  var handleOwnRef = React.useCallback(function (instance) {\n    // #StrictMode ready\n    rootRef.current = ReactDOM.findDOMNode(instance);\n  }, []);\n  var handleRef = useForkRef(children.ref, handleOwnRef); // ⚠️ You may rely on React.useMemo as a performance optimization, not as a semantic guarantee.\n  // https://reactjs.org/docs/hooks-reference.html#usememo\n\n  React.useMemo(function () {\n    if (!open || typeof window === 'undefined') {\n      return;\n    }\n\n    nodeToRestore.current = getDoc().activeElement;\n  }, [open]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  React.useEffect(function () {\n    if (!open) {\n      return;\n    }\n\n    var doc = ownerDocument(rootRef.current); // We might render an empty child.\n\n    if (!disableAutoFocus && rootRef.current && !rootRef.current.contains(doc.activeElement)) {\n      if (!rootRef.current.hasAttribute('tabIndex')) {\n        if (process.env.NODE_ENV !== 'production') {\n          console.error(['Material-UI: the modal content node does not accept focus.', 'For the benefit of assistive technologies, ' + 'the tabIndex of the node is being set to \"-1\".'].join('\\n'));\n        }\n\n        rootRef.current.setAttribute('tabIndex', -1);\n      }\n\n      rootRef.current.focus();\n    }\n\n    var contain = function contain() {\n      if (!doc.hasFocus() || disableEnforceFocus || !isEnabled() || ignoreNextEnforceFocus.current) {\n        ignoreNextEnforceFocus.current = false;\n        return;\n      }\n\n      if (rootRef.current && !rootRef.current.contains(doc.activeElement)) {\n        rootRef.current.focus();\n      }\n    };\n\n    var loopFocus = function loopFocus(event) {\n      // 9 = Tab\n      if (disableEnforceFocus || !isEnabled() || event.keyCode !== 9) {\n        return;\n      } // Make sure the next tab starts from the right place.\n\n\n      if (doc.activeElement === rootRef.current) {\n        // We need to ignore the next contain as\n        // it will try to move the focus back to the rootRef element.\n        ignoreNextEnforceFocus.current = true;\n\n        if (event.shiftKey) {\n          sentinelEnd.current.focus();\n        } else {\n          sentinelStart.current.focus();\n        }\n      }\n    };\n\n    doc.addEventListener('focus', contain, true);\n    doc.addEventListener('keydown', loopFocus, true); // With Edge, Safari and Firefox, no focus related events are fired when the focused area stops being a focused area\n    // e.g. https://bugzilla.mozilla.org/show_bug.cgi?id=559561.\n    //\n    // The whatwg spec defines how the browser should behave but does not explicitly mention any events:\n    // https://html.spec.whatwg.org/multipage/interaction.html#focus-fixup-rule.\n\n    var interval = setInterval(function () {\n      contain();\n    }, 50);\n    return function () {\n      clearInterval(interval);\n      doc.removeEventListener('focus', contain, true);\n      doc.removeEventListener('keydown', loopFocus, true); // restoreLastFocus()\n\n      if (!disableRestoreFocus) {\n        // In IE 11 it is possible for document.activeElement to be null resulting\n        // in nodeToRestore.current being null.\n        // Not all elements in IE 11 have a focus method.\n        // Once IE 11 support is dropped the focus() call can be unconditional.\n        if (nodeToRestore.current && nodeToRestore.current.focus) {\n          nodeToRestore.current.focus();\n        }\n\n        nodeToRestore.current = null;\n      }\n    };\n  }, [disableAutoFocus, disableEnforceFocus, disableRestoreFocus, isEnabled, open]);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    tabIndex: 0,\n    ref: sentinelStart,\n    \"data-test\": \"sentinelStart\"\n  }), React.cloneElement(children, {\n    ref: handleRef\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    tabIndex: 0,\n    ref: sentinelEnd,\n    \"data-test\": \"sentinelEnd\"\n  }));\n}\n\nprocess.env.NODE_ENV !== \"production\" ? TrapFocus.propTypes = {\n  /**\n   * A single child content element.\n   */\n  children: PropTypes.element.isRequired,\n\n  /**\n   * If `true`, the modal will not automatically shift focus to itself when it opens, and\n   * replace it to the last focused element when it closes.\n   * This also works correctly with any modal children that have the `disableAutoFocus` prop.\n   *\n   * Generally this should never be set to `true` as it makes the modal less\n   * accessible to assistive technologies, like screen readers.\n   */\n  disableAutoFocus: PropTypes.bool,\n\n  /**\n   * If `true`, the modal will not prevent focus from leaving the modal while open.\n   *\n   * Generally this should never be set to `true` as it makes the modal less\n   * accessible to assistive technologies, like screen readers.\n   */\n  disableEnforceFocus: PropTypes.bool,\n\n  /**\n   * If `true`, the modal will not restore focus to previously focused element once\n   * modal is hidden.\n   */\n  disableRestoreFocus: PropTypes.bool,\n\n  /**\n   * Return the document to consider.\n   * We use it to implement the restore focus between different browser documents.\n   */\n  getDoc: PropTypes.func.isRequired,\n\n  /**\n   * Do we still want to enforce the focus?\n   * This prop helps nesting TrapFocus elements.\n   */\n  isEnabled: PropTypes.func.isRequired,\n\n  /**\n   * If `true`, the modal is open.\n   */\n  open: PropTypes.bool.isRequired\n} : void 0;\n/*\n\nIn the future, we should be able to replace TrapFocus with:\nhttps://github.com/facebook/react/blob/master/packages/react-events/docs/FocusScope.md\n\n```jsx\nimport FocusScope from 'react-dom/FocusScope';\n\nfunction TrapFocus(props) {\n  const {\n    children\n    disableAutoFocus = false,\n    disableEnforceFocus = false,\n    disableRestoreFocus = false,\n    open,\n  } = props;\n\n  if (!open) {\n    return children;\n  }\n\n  return (\n    <FocusScope\n      autoFocus={!disableAutoFocus}\n      contain={!disableEnforceFocus}\n      restoreFocus={!disableRestoreFocus}\n    >\n      {children}\n    </FocusScope>\n  );\n}\n```\n\n*/\n\nexport default TrapFocus;","map":{"version":3,"names":["React","ReactDOM","PropTypes","ownerDocument","useForkRef","TrapFocus","props","children","_props$disableAutoFoc","disableAutoFocus","_props$disableEnforce","disableEnforceFocus","_props$disableRestore","disableRestoreFocus","getDoc","isEnabled","open","ignoreNextEnforceFocus","useRef","sentinelStart","sentinelEnd","nodeToRestore","rootRef","handleOwnRef","useCallback","instance","current","findDOMNode","handleRef","ref","useMemo","window","activeElement","useEffect","doc","contains","hasAttribute","process","env","NODE_ENV","console","error","join","setAttribute","focus","contain","hasFocus","loopFocus","event","keyCode","shiftKey","addEventListener","interval","setInterval","clearInterval","removeEventListener","createElement","Fragment","tabIndex","cloneElement","propTypes","element","isRequired","bool","func"],"sources":["C:/Users/WINDWOS  10 teste/Desktop/GUTHUB/Repositorios/DIO-Projeto-Reactjs/covid19/node_modules/@material-ui/core/esm/Modal/TrapFocus.js"],"sourcesContent":["/* eslint-disable consistent-return, jsx-a11y/no-noninteractive-tabindex */\nimport * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport PropTypes from 'prop-types';\nimport ownerDocument from '../utils/ownerDocument';\nimport useForkRef from '../utils/useForkRef';\n/**\n * @ignore - internal component.\n */\n\nfunction TrapFocus(props) {\n  var children = props.children,\n      _props$disableAutoFoc = props.disableAutoFocus,\n      disableAutoFocus = _props$disableAutoFoc === void 0 ? false : _props$disableAutoFoc,\n      _props$disableEnforce = props.disableEnforceFocus,\n      disableEnforceFocus = _props$disableEnforce === void 0 ? false : _props$disableEnforce,\n      _props$disableRestore = props.disableRestoreFocus,\n      disableRestoreFocus = _props$disableRestore === void 0 ? false : _props$disableRestore,\n      getDoc = props.getDoc,\n      isEnabled = props.isEnabled,\n      open = props.open;\n  var ignoreNextEnforceFocus = React.useRef();\n  var sentinelStart = React.useRef(null);\n  var sentinelEnd = React.useRef(null);\n  var nodeToRestore = React.useRef();\n  var rootRef = React.useRef(null); // can be removed once we drop support for non ref forwarding class components\n\n  var handleOwnRef = React.useCallback(function (instance) {\n    // #StrictMode ready\n    rootRef.current = ReactDOM.findDOMNode(instance);\n  }, []);\n  var handleRef = useForkRef(children.ref, handleOwnRef); // ⚠️ You may rely on React.useMemo as a performance optimization, not as a semantic guarantee.\n  // https://reactjs.org/docs/hooks-reference.html#usememo\n\n  React.useMemo(function () {\n    if (!open || typeof window === 'undefined') {\n      return;\n    }\n\n    nodeToRestore.current = getDoc().activeElement;\n  }, [open]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  React.useEffect(function () {\n    if (!open) {\n      return;\n    }\n\n    var doc = ownerDocument(rootRef.current); // We might render an empty child.\n\n    if (!disableAutoFocus && rootRef.current && !rootRef.current.contains(doc.activeElement)) {\n      if (!rootRef.current.hasAttribute('tabIndex')) {\n        if (process.env.NODE_ENV !== 'production') {\n          console.error(['Material-UI: the modal content node does not accept focus.', 'For the benefit of assistive technologies, ' + 'the tabIndex of the node is being set to \"-1\".'].join('\\n'));\n        }\n\n        rootRef.current.setAttribute('tabIndex', -1);\n      }\n\n      rootRef.current.focus();\n    }\n\n    var contain = function contain() {\n      if (!doc.hasFocus() || disableEnforceFocus || !isEnabled() || ignoreNextEnforceFocus.current) {\n        ignoreNextEnforceFocus.current = false;\n        return;\n      }\n\n      if (rootRef.current && !rootRef.current.contains(doc.activeElement)) {\n        rootRef.current.focus();\n      }\n    };\n\n    var loopFocus = function loopFocus(event) {\n      // 9 = Tab\n      if (disableEnforceFocus || !isEnabled() || event.keyCode !== 9) {\n        return;\n      } // Make sure the next tab starts from the right place.\n\n\n      if (doc.activeElement === rootRef.current) {\n        // We need to ignore the next contain as\n        // it will try to move the focus back to the rootRef element.\n        ignoreNextEnforceFocus.current = true;\n\n        if (event.shiftKey) {\n          sentinelEnd.current.focus();\n        } else {\n          sentinelStart.current.focus();\n        }\n      }\n    };\n\n    doc.addEventListener('focus', contain, true);\n    doc.addEventListener('keydown', loopFocus, true); // With Edge, Safari and Firefox, no focus related events are fired when the focused area stops being a focused area\n    // e.g. https://bugzilla.mozilla.org/show_bug.cgi?id=559561.\n    //\n    // The whatwg spec defines how the browser should behave but does not explicitly mention any events:\n    // https://html.spec.whatwg.org/multipage/interaction.html#focus-fixup-rule.\n\n    var interval = setInterval(function () {\n      contain();\n    }, 50);\n    return function () {\n      clearInterval(interval);\n      doc.removeEventListener('focus', contain, true);\n      doc.removeEventListener('keydown', loopFocus, true); // restoreLastFocus()\n\n      if (!disableRestoreFocus) {\n        // In IE 11 it is possible for document.activeElement to be null resulting\n        // in nodeToRestore.current being null.\n        // Not all elements in IE 11 have a focus method.\n        // Once IE 11 support is dropped the focus() call can be unconditional.\n        if (nodeToRestore.current && nodeToRestore.current.focus) {\n          nodeToRestore.current.focus();\n        }\n\n        nodeToRestore.current = null;\n      }\n    };\n  }, [disableAutoFocus, disableEnforceFocus, disableRestoreFocus, isEnabled, open]);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    tabIndex: 0,\n    ref: sentinelStart,\n    \"data-test\": \"sentinelStart\"\n  }), React.cloneElement(children, {\n    ref: handleRef\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    tabIndex: 0,\n    ref: sentinelEnd,\n    \"data-test\": \"sentinelEnd\"\n  }));\n}\n\nprocess.env.NODE_ENV !== \"production\" ? TrapFocus.propTypes = {\n  /**\n   * A single child content element.\n   */\n  children: PropTypes.element.isRequired,\n\n  /**\n   * If `true`, the modal will not automatically shift focus to itself when it opens, and\n   * replace it to the last focused element when it closes.\n   * This also works correctly with any modal children that have the `disableAutoFocus` prop.\n   *\n   * Generally this should never be set to `true` as it makes the modal less\n   * accessible to assistive technologies, like screen readers.\n   */\n  disableAutoFocus: PropTypes.bool,\n\n  /**\n   * If `true`, the modal will not prevent focus from leaving the modal while open.\n   *\n   * Generally this should never be set to `true` as it makes the modal less\n   * accessible to assistive technologies, like screen readers.\n   */\n  disableEnforceFocus: PropTypes.bool,\n\n  /**\n   * If `true`, the modal will not restore focus to previously focused element once\n   * modal is hidden.\n   */\n  disableRestoreFocus: PropTypes.bool,\n\n  /**\n   * Return the document to consider.\n   * We use it to implement the restore focus between different browser documents.\n   */\n  getDoc: PropTypes.func.isRequired,\n\n  /**\n   * Do we still want to enforce the focus?\n   * This prop helps nesting TrapFocus elements.\n   */\n  isEnabled: PropTypes.func.isRequired,\n\n  /**\n   * If `true`, the modal is open.\n   */\n  open: PropTypes.bool.isRequired\n} : void 0;\n/*\n\nIn the future, we should be able to replace TrapFocus with:\nhttps://github.com/facebook/react/blob/master/packages/react-events/docs/FocusScope.md\n\n```jsx\nimport FocusScope from 'react-dom/FocusScope';\n\nfunction TrapFocus(props) {\n  const {\n    children\n    disableAutoFocus = false,\n    disableEnforceFocus = false,\n    disableRestoreFocus = false,\n    open,\n  } = props;\n\n  if (!open) {\n    return children;\n  }\n\n  return (\n    <FocusScope\n      autoFocus={!disableAutoFocus}\n      contain={!disableEnforceFocus}\n      restoreFocus={!disableRestoreFocus}\n    >\n      {children}\n    </FocusScope>\n  );\n}\n```\n\n*/\n\nexport default TrapFocus;"],"mappings":"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"},"metadata":{},"sourceType":"module"}